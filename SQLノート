SELECT 列名
FORM テーブル名
WHERE

データの追加
INSERT INTO テーブル名
VALUES 追加するデータ

データの更新
UPDATE テーブル名
SET 

式　IS NULL 　NULLであることを判定する
式　IS NOT NULL 　NULLでないことを判定する

LIKE演算子
式　LIKE　パターン文字列

％　任意の０文字以上の文字列
＿　任意の１文字

ESCAPE句
指定した文字に続く文字はただの文字として扱う。パターン文字列を文字として扱いたい場合に使う

BETWEEN演算子
式　BETWEEN 値１　AND　値２
値１以上値２以下の場合に真になる

IN/NOT IN演算子
式 IN (値１,値２,値３…)　()ないに列挙した値のいずれかにデータが合致しているかどうか
式 NOT IN (値…) ()内に列挙した値のどれとも合致しないことを判定

ANY/ALL演算子
式　基本比較演算子 ANY () 　値リストのそれぞれと比較して、いずれかが真なら真
式　基本比較演算子 ALL ()　 値リストのそれぞれと比較してすべてが真なら真

AND/OR演算子
条件式１　AND　条件式２
条件式１　OR　条件式２

NOT演算子
NOT　条件式　条件式の結果を逆転させる

論理演算子の優先度
NOT > AND > OR

DISTINCT　検索結果で重複している行があれば、それを取り除く
SELECT DISTINCT 列名
FROM テーブル名

ORDER BY　　指定した列の値を基準として並び替える
SELECT 列名 FROM テーブル名
ORDER BY 列名　並び順(ASC or DESC 省略時はASC)

OFFSET - FETCH句
OFFSET 先頭から除外する行数 ROWS
FETCH NEXT 取得行数 ROWS ONLY

UNION 和集合 二つの文をつないで、それぞれの検索結果を足し合わせる。
SELECT 文１
UNION (ALL)　ALLをつけると重複行をまとめずにすべて返す
SELECT 文２

EXCEPT 差集合　
SELECT 文１
EXCEPT (ALL)
SELECT 文２

INTERSECT 積集合
SELECT 文１
INTERSECT (ALL)
SELECT　文２

CASE演算子
CASE 評価する列や式 WHEN 値１ THEN 値１の時に返す値
　　　　　　　　　　(ELSE デフォルト値)
END

CASE WHEN 条件１ THEN 条件１の時に返す値
　　(ELSE デフォルト値)
END

関数

LENGTH(文字列を表す列)　＝＞　文字列の長さを表す数値
LEN

TRIM(文字列を表す列)　＝＞　左右から空白を除去した文字列
LTRIM(文字列を表す列)　＝＞　左側の空白を除去した文字列
RTRIM(文字列を表す列)　＝＞　右側の空白を除去した文字列

REPLACE(置換対象の文字列、置換前の部分文字列、置換後の部分文字列)　＝＞　置換処理された後の文字列

SUBSTRING(文字列を表す列、抽出を開始する位置、抽出する文字の数)　＝＞　抽出された部分文字列
SUBSTR

CONCAT(文字列、文字列。。。)　＝＞　連結後の文字列

ROUND(数値を表す列、有効とする桁数)　＝＞四捨五入した値

TRUNC(数値を表す列、有効とする桁数)　＝＞　切り捨てた値

POWER(数値を表す列、何乗するかを指定する数値)　＝＞　数値を指定した回数だけ乗じた結果

CURRENT_TIMESTAMP => 現在の日時（年、月、日、時、分、秒）
CURRENT_DATE => 現在の日時（年、月、日）
CURRENT_TIME => 現在の日時（時、分、秒）

CAST(変換する値 AS 変換する型)　＝＞　変換後の値

COALESCE(列や式１、列や式２，列や式３。。。)　＝＞　引数のうち、最初に現れたNULLでない引数

SUM(列)　各行の値の合計を求める
MAX(列)　各行の値の最大値を求める
MIN(列)  各行の値の最小値を求める
AVG(列)  各行の値の平均値を求める
COUNT(*)　検索結果の行数
COUNR(列)　検索結果の指定列に関する行数

GROUP BY グループ化
HAVING 集計結果に対する絞り込み条件

SELECT文の基本構文
SELECT　選択別リスト
FROM　テーブル名
[WHERE  条件式]
[GROUP BY  グループ化列名]
[HAVING  集計結果に対する条件式]
[ORDER BY 並び替え列名]

